license(GWAF)
license("gwaf")
license(gwaf)
tracto=read.csv("./tracto_phenfile.csv",header=T)
install.packages("pROC")
library(pROC)
power.roc.test(auc = NULL, ncontrols = NULL,
ncases = NULL, sig.level = 0.05, power = NULL, kappa = 1,
alternative = c("two.sided", "one.sided"), ...)
power.roc.test(auc = NULL, ncontrols = NULL, ncases = NULL, sig.level = 0.05, power = NULL, kappa = 1, alternative = c("two.sided", "one.sided"), ...)
rocobj <- roc(aSAH$outcome, aSAH$s100b)
data(aSAH)
rocobj <- roc(aSAH$outcome, aSAH$s100b)
power.roc.test(ncases=12, ncontrols=12, auc=0.89, sig.level=0.05)
power.roc.test(ncases=12, ncontrols=12, auc=0.80, sig.level=0.05)
power.roc.test(auc=rocobj$auc, sig.level=0.05, power=0.80, kappa=1)
power.roc.test(auc=0.80, sig.level=0.05, power=0.80, kappa=1)
power.roc.test(auc=0.85, sig.level=0.05, power=0.80, kappa=1)
?cbind
?join
list_all=[10061
10062
10142
10154
10195
10196
10262
10533
10848
10964
10994
11052
11998
12004
12393
14021
5537
5631
5770
5798
6023
6050
6289
6321
6433
6453
6529
6563
6636
6685
6752
6774
6837
6915
6997
7005
7026
7041
7055
7092
7099
7118
7130
7148
7175
7202
7227
7234
7350
7359
7389
7473
7499
7515
7576
7581
7620
7636
7704
7745
7831
7844
7864
7865
7885
7910
7917
7935
7965
8007
8060
8075
8119
8151
8159
8171
8174
8198
8255
8307
8343
8350
8514
8560
8566
8594
8792
8921
9027
9056
9201
9240
9279
9411
9439
9544
9554
9754
9890]
equire(dplyr)
require(plyr)
library(lmPerm)
subj_vbm=read.csv('list_good_vbm.csv',header=T)
data_all=read.csv('VBM_Data.csv',header=T)
data_vbm=merge(subj_vbm,data_all,by="scanid")
data_vbm$Income_collapsed[is.na(data_vbm$Income_collapsed)]<-1
data_all=read.csv('Dem_All_VBM.csv',header=T)
names(data_all)[1] <-"Exam_n"
data_comorbidity=read.csv('comorbidity.csv')
data_all=merge(data_comorbidity,data_all,by="Exam_n")
## group contrast
data_all$Group.f<-factor(data_all$Group)
contrasts(data_all$Group.f)<-contr.treatment(3,base=3)
data_all$Group2<-data_all$Group
data_all$Group2[data_all$Group==3]<-2
data_all$Group2.f<-factor(data_all$Group2)
contrasts(data_all$Group2.f)<-contr.treatment(2,base=2)
data_sc=read.csv('data_sc_amyg.csv')
data_sc_5M=read.csv('data_sc_amyg_5M.csv')
data_sc_1M=read.csv('data_sc_amyg_1M.csv')
data_sc_1M_FS=read.csv('data_sc_amyg_1M_FS.csv')
data_sc_5M_FS=read.csv('data_sc_amyg_5M_FS.csv')
data_sc_FA=read.csv('data_sc_amyg_FA.csv')
data_sc_invMD=read.csv('data_sc_amyg_invMD.csv')
names(data_all)[1] <-"Exam_n"
data_all$Income_collapsed[is.na(data_all$Income_collapsed)]<-2
data_all$Income_collapsed_2level[data_all$Income_collapsed<=2]<-1
data_all$Income_collapsed_2level[data_all$Income_collapsed>3]<-2
data_all$Income_collapsed_2level[is.na(data_all$Income_collapsed_2level)]<-1
# take care of birth weight of zero
data_all$scan_q6_birth_weight[data_all$scan_q6_birth_weight==0]<-median(data_all$scan_q6_birth_weight[data_all$scan_q6_birth_weight!=0],na.rm=T)
data_all$scan_q9_birth_weight[data_all$scan_q9_birth_weight==0]<-median(data_all$scan_q9_birth_weight[data_all$scan_q9_birth_weight!=0],na.rm=T)
#recoding genotype
data_all$sert_3group[data_all$Genotype=="SS"] <- 1
data_all$sert_3group[data_all$Genotype=="SL"] <- 2
data_all$sert_3group[data_all$Genotype=="LL"] <- 3
data_all$sert_2group[data_all$Genotype=="SS"] <- 1
data_all$sert_2group[data_all$Genotype=="SL"] <- 1
data_all$sert_2group[data_all$Genotype=="LL"] <- 2
## creating data_all$dem_edu_yrs_bin
data_all$dem_edu_yrs_bin <- data_all$dem_edu_yrs
data_all$dem_edu_yrs_bin[data_all$dem_edu_yrs <= 12] <- 1
data_all$dem_edu_yrs_bin[data_all$dem_edu_yrs > 12 & data_all$dem_edu_yrs <= 16] <- 2
data_all$dem_edu_yrs_bin[data_all$dem_edu_yrs >= 17] <- 3
data_all$dem_edu_yrs_bin[is.na(data_all$dem_edu_yrs)] <- 2
data_all$scan_age[data_all$scan_age==0]<-round(mean(data_all$scan_age[data_all$scan_age!=0]))
data_sc_dem=merge(data_all,data_sc,by="Exam_n")
data_sc_1M_dem=merge(data_all,data_sc_1M,by="Exam_n")
data_sc_5M_dem=merge(data_all,data_sc_5M,by="Exam_n")
data_sc_1M_FS_dem=merge(data_all,data_sc_1M_FS,by="Exam_n")
data_sc_5M_FS_dem=merge(data_all,data_sc_5M_FS,by="Exam_n")
data_sc_FA_dem=merge(data_all,data_sc_FA,by="Exam_n")
data_sc_invMD_dem=merge(data_all,data_sc_invMD,by="Exam_n")
data_sc_badvol=read.csv('data_sc_badvol.csv',header=T)
data_sc_1M_dem=merge(data_sc_1M_dem,data_sc_badvol,by="Exam_n")
data_sc_5M_dem=merge(data_sc_5M_dem,data_sc_badvol,by="Exam_n")
data_sc_1M_FS_dem=merge(data_sc_1M_FS_dem,data_sc_badvol,by="Exam_n")
data_sc_5M_FS_dem=merge(data_sc_5M_FS_dem,data_sc_badvol,by="Exam_n")
data_sc_dem=merge(data_sc_dem,data_sc_badvol,by="Exam_n")
setwd("/Volumes/Data2/Dropbox (NYSPI)/0Documents/00 My Papers/00 Conte/tables")
equire(dplyr)
require(plyr)
library(lmPerm)
subj_vbm=read.csv('list_good_vbm.csv',header=T)
data_all=read.csv('VBM_Data.csv',header=T)
data_vbm=merge(subj_vbm,data_all,by="scanid")
data_vbm$Income_collapsed[is.na(data_vbm$Income_collapsed)]<-1
data_all=read.csv('Dem_All_VBM.csv',header=T)
names(data_all)[1] <-"Exam_n"
data_comorbidity=read.csv('comorbidity.csv')
data_all=merge(data_comorbidity,data_all,by="Exam_n")
## group contrast
data_all$Group.f<-factor(data_all$Group)
contrasts(data_all$Group.f)<-contr.treatment(3,base=3)
data_all$Group2<-data_all$Group
data_all$Group2[data_all$Group==3]<-2
data_all$Group2.f<-factor(data_all$Group2)
contrasts(data_all$Group2.f)<-contr.treatment(2,base=2)
data_sc=read.csv('data_sc_amyg.csv')
data_sc_5M=read.csv('data_sc_amyg_5M.csv')
data_sc_1M=read.csv('data_sc_amyg_1M.csv')
data_sc_1M_FS=read.csv('data_sc_amyg_1M_FS.csv')
data_sc_5M_FS=read.csv('data_sc_amyg_5M_FS.csv')
data_sc_FA=read.csv('data_sc_amyg_FA.csv')
data_sc_invMD=read.csv('data_sc_amyg_invMD.csv')
names(data_all)[1] <-"Exam_n"
data_all$Income_collapsed[is.na(data_all$Income_collapsed)]<-2
data_all$Income_collapsed_2level[data_all$Income_collapsed<=2]<-1
data_all$Income_collapsed_2level[data_all$Income_collapsed>3]<-2
data_all$Income_collapsed_2level[is.na(data_all$Income_collapsed_2level)]<-1
# take care of birth weight of zero
data_all$scan_q6_birth_weight[data_all$scan_q6_birth_weight==0]<-median(data_all$scan_q6_birth_weight[data_all$scan_q6_birth_weight!=0],na.rm=T)
data_all$scan_q9_birth_weight[data_all$scan_q9_birth_weight==0]<-median(data_all$scan_q9_birth_weight[data_all$scan_q9_birth_weight!=0],na.rm=T)
#recoding genotype
data_all$sert_3group[data_all$Genotype=="SS"] <- 1
data_all$sert_3group[data_all$Genotype=="SL"] <- 2
data_all$sert_3group[data_all$Genotype=="LL"] <- 3
data_all$sert_2group[data_all$Genotype=="SS"] <- 1
data_all$sert_2group[data_all$Genotype=="SL"] <- 1
data_all$sert_2group[data_all$Genotype=="LL"] <- 2
## creating data_all$dem_edu_yrs_bin
data_all$dem_edu_yrs_bin <- data_all$dem_edu_yrs
data_all$dem_edu_yrs_bin[data_all$dem_edu_yrs <= 12] <- 1
data_all$dem_edu_yrs_bin[data_all$dem_edu_yrs > 12 & data_all$dem_edu_yrs <= 16] <- 2
data_all$dem_edu_yrs_bin[data_all$dem_edu_yrs >= 17] <- 3
data_all$dem_edu_yrs_bin[is.na(data_all$dem_edu_yrs)] <- 2
data_all$scan_age[data_all$scan_age==0]<-round(mean(data_all$scan_age[data_all$scan_age!=0]))
data_sc_dem=merge(data_all,data_sc,by="Exam_n")
data_sc_1M_dem=merge(data_all,data_sc_1M,by="Exam_n")
data_sc_5M_dem=merge(data_all,data_sc_5M,by="Exam_n")
data_sc_1M_FS_dem=merge(data_all,data_sc_1M_FS,by="Exam_n")
data_sc_5M_FS_dem=merge(data_all,data_sc_5M_FS,by="Exam_n")
data_sc_FA_dem=merge(data_all,data_sc_FA,by="Exam_n")
data_sc_invMD_dem=merge(data_all,data_sc_invMD,by="Exam_n")
data_sc_badvol=read.csv('data_sc_badvol.csv',header=T)
data_sc_1M_dem=merge(data_sc_1M_dem,data_sc_badvol,by="Exam_n")
data_sc_5M_dem=merge(data_sc_5M_dem,data_sc_badvol,by="Exam_n")
data_sc_1M_FS_dem=merge(data_sc_1M_FS_dem,data_sc_badvol,by="Exam_n")
data_sc_5M_FS_dem=merge(data_sc_5M_FS_dem,data_sc_badvol,by="Exam_n")
data_sc_dem=merge(data_sc_dem,data_sc_badvol,by="Exam_n")
View(data_sc_1M)
View(data_sc_1M_dem)
data_sc_1M_dem$Group
setwd("/Volumes/Pegasus/Bigdata/ADNI/1018_DTI_MRI_ADNI2_screening_baseline/fs/group_freesurfer")
setwd("/Volumes/Pegasus/Bigdata/ADNI/1018_DTI_MRI_ADNI2_screening_baseline/fs/group_freesurfer")
filelist = list.files(path=".",pattern="*txt")
value_freesurfer<-lapply(filelist,
read.delim,
header=T,sep="\t")
list.data<-list()
for (i in 1:length(filelist))
{
list.data[[i]]<-read.delim(filelist[i],sep="\t"")
}
